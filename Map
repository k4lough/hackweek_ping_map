chart = {
  const svg = d3.create("svg")
      .attr("viewBox", [0, 0, 975, 610]);

  svg.append("g")
      .attr("transform", "translate(610,20)")
      .append(() => legend({color, title: data.title, width: 260}));

  svg.append("g")
    .selectAll("path")
    .data(topojson.feature(us, us.objects.counties).features)
    .join("path")
      .attr("fill", d => color(data.get(d.id)))
      .attr("d", path)
    .append("title")
      .text(d => `${d.properties.name}, ${states.get(d.id.slice(0, 2)).name}
${format(data.get(d.id))}`);

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))
      .attr("fill", "none")
      .attr("stroke", "white")
      .attr("stroke-linejoin", "round")
      .attr("d", path);

  return svg.node();
}

data = Map(3219) {
  "01001" => 5.1
  "01003" => 4.9
  "01005" => 8.6
  "01007" => 6.2
  "01009" => 5.1
  "01011" => 7.1
  "01013" => 6.7
  "01015" => 6.1
  "01017" => 5
  "01019" => 5
  "01021" => 5.2
  "01023" => 7.9
  "01025" => 11.1
  "01027" => 5.9
  "01029" => 5.5
  "01031" => 5.6
  "01033" => 6.5
  "01035" => 7.7
  "01037" => 5.7
  "01039" => 6.7
  … more
}
color = ƒ(t)
path = ƒ(t)
format = ƒ(d)
states = Map(51) {"04" => Object, "22" => Object, "16" => Object, "27" => Object, "38" => Object, "46" => Object, "36" => Object, "02" => Object, "13" => Object, "18" => Object, "26" => Object, "28" => Object, "39" => Object, "48" => Object, "31" => Object, "08" => Object, "24" => Object, "20" => Object, "17" => Object, "55" => Object, …}
us = Object {type: "Topology", bbox: Array(4), transform: Object, objects: Object, arcs: Array(9462)}
topojson = Object {bbox: ƒ(e), feature: ƒ(e, r), merge: ƒ(e), mergeArcs: ƒ(e, r), mesh: ƒ(e), meshArcs: ƒ(e, r, t), neighbors: ƒ(e), quantize: ƒ(e, r), transform: ƒ(e), untransform: ƒ(e)}
d3 = Object {event: null, format: ƒ(t), formatPrefix: ƒ(t, n), timeFormat: ƒ(t), timeParse: ƒ(t), utcFormat: ƒ(t), utcParse: ƒ(t), FormatSpecifier: ƒ(t), active: ƒ(t, n), arc: ƒ(), area: ƒ(), areaRadial: ƒ(), ascending: ƒ(t, n), autoType: ƒ(t), axisBottom: ƒ(t), axisLeft: ƒ(t), axisRight: ƒ(t), axisTop: ƒ(t), bisect: ƒ(n, e, r, i), bisectLeft: ƒ(n, e, r, i), …}
import {legend} from @d3/color-legend
